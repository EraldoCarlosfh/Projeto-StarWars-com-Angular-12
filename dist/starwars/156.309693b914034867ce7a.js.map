{"version":3,"sources":["./src/app/components/pilots/pilot-detail/pilot-detail.component.html","./src/app/components/pilots/pilot-detail/pilot-detail.component.ts","./src/app/shared/modal/modal.component.ts","./src/app/shared/modal/modal.component.html","./src/app/components/pilots/pilots.component.html","./src/app/components/pilots/pilots-routing.module.ts","./src/app/components/pilots/pilots.component.ts","./src/app/components/pilots/pilots.module.ts"],"names":["PilotDetailComponent","fb","activatedRouter","peopleService","modalService","toastr","spinner","router","pilot","stateSave","this","form","controls","pilotId","snapshot","paramMap","get","show","getPilotById","subscribe","patchValue","error","console","add","hide","carregarPilot","validation","group","id","value","disabled","name","gender","age","height","reset","campoForm","errors","touched","template","valid","postPilot","pilotRetorno","success","navigate","resetForm","putPilot","openModal","modalRef","class","onSubmit","savePilot","ModalComponent","filtroUrl","filmesFiltered","people","pilotsRoutes","path","component","PilotsComponent","peopleFilms","peoples","peoplesFiltered","pagina","viewButton","nameButton","filtroListado","filtroLista","filterPilots","GetAllPilot","filtrarPor","toLocaleLowerCase","filter","indexOf","viewMore","slice","length","getAllPilot","loading","initialState","event","peopleId","log","stopPropagation","deletePilotById","namePilot","forEach","x","window","location","reload","getPilotPage","verMais","openModalAddPilot","PilotsRoutingModule","PilotsModule"],"mappings":"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","file":"156.309693b914034867ce7a.js","sourcesContent":["<div class=\"container\">\n\n  <div class=\"\">\n    <img src=\"../assets/StarWars3.png\" id=\"starwars\" alt=\"\">\n  </div>\n\n  <div class=\"title\">\n    <p>Pilots Registration</p>\n  </div>\n\n  <div class=\"card rounded shadow-sm\">\n    <img src=\"../assets/starwars.jpg\" class=\"card-img-top\" alt=\"...\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n\n      <div class=\"p-3\">\n        <div class=\"form-row d-flex justify-content-between\">\n          <div class=\"form-group col-md-1\">\n            <label>Id:</label>\n            <input type=\"text\" class=\"form-control\" [ngClass]=\"(f.id)\" formControlName=\"id\">\n          </div>\n          <div class=\"form-group col-md-11\">\n            <label>Name:</label>\n            <input type=\"text\" class=\"form-control\" [ngClass]=\"cssValidator(f.name)\" formControlName=\"name\"\n              placeholder=\"Enter your Name\" [(ngModel)]=\"pilot.name\">\n            <div *ngIf=\"f.name.errors?.required\" class=\"invalid-feedback\">\n              Name is mandatory!\n            </div>\n            <div *ngIf=\"f.name.errors?.minlength\" class=\"invalid-feedback\">\n              Name must be at least 4 characters long!\n            </div>\n            <div *ngIf=\"f.name.errors?.maxlength\" class=\"invalid-feedback\">\n              Name must have a maximum of 50 characters!\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-row d-flex justify-content-between mt-3 mb-4\">\n          <div class=\"form-group col-md-4\">\n            <label>Gender:</label>\n            <input type=\"text\" class=\"form-control\" [ngClass]=\"cssValidator(f.gender)\" formControlName=\"gender\"\n              placeholder=\"Gender\" [(ngModel)]=\"pilot.gender\">\n            <div *ngIf=\"f.gender.errors?.required && f.gender.touched\" class=\"invalid-feedback\">\n              Gender is mandatory!\n            </div>\n          </div>\n\n\n          <div class=\"form-group col-md-2\">\n            <label>Age:</label>\n            <input type=\"number\" class=\"form-control\" [ngClass]=\"cssValidator(f.age)\" formControlName=\"age\"\n              placeholder=\"Age\" [(ngModel)]=\"pilot.age\">\n            <div *ngIf=\"f.age.errors?.required && f.age.touched\" class=\"invalid-feedback\">\n              Age is mandatory!\n            </div>\n            <div *ngIf=\"f.age.errors?.max && f.age.touched\" class=\"invalid-feedback\">\n              Age must contain a maximum of 3 digits!\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-2\">\n            <label>Height:</label>\n            <input type=\"number\" class=\"form-control\" [ngClass]=\"cssValidator(f.height)\" formControlName=\"height\"\n              placeholder=\"Height\" [(ngModel)]=\"pilot.height\">\n            <div *ngIf=\"f.height.errors?.required && f.height.touched\" class=\"invalid-feedback\">\n              Height is mandatory!\n            </div>\n            <div *ngIf=\"f.height.errors?.max && f.height.touched\" class=\"invalid-feedback\">\n              Height must contain a maximum of 4 digits!\n            </div>\n          </div>\n\n        </div>\n\n        <div class=\"card-footer\">\n          <div class=\"d-flex justify-content-between\">\n            <button class=\"btn btn-outline-secondary mr-auto border\" (click)=\"resetForm()\">\n              Cancel Change\n            </button>\n            <button class=\"btn btn-primary\" [disabled]=\"!form.valid\" (click)=\"savePilot(template)\">\n              Save Piloto\n            </button>\n          </div>\n        </div>\n\n      </div>\n    </form>\n  </div>\n</div>\n\n<ng-template #template>\n  <div class=\"modal-body text-center\">\n    <p>Want to add a new Pilot?</p>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"confirm()\">Yes</button>\n    <button type=\"button\" class=\"btn btn-primary\" routerLink=\"/pilots\" (click)=\"decline()\">No</button>\n  </div>\n</ng-template>\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { People } from 'src/app/models/People';\nimport { PeopleService } from 'src/app/services/people.service';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-pilot-detail',\n  templateUrl: './pilot-detail.component.html',\n  styleUrls: ['./pilot-detail.component.scss'],\n})\nexport class PilotDetailComponent implements OnInit {\n  modalRef!: BsModalRef;\n  pilotId!: number;\n  pilot = {} as People;\n  form!: FormGroup;\n  stateSave = 'postPilot';\n\n  get f(): any {\n    return this.form.controls;\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    private activatedRouter: ActivatedRoute,\n    private peopleService: PeopleService,\n    private modalService: BsModalService,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService,\n    private router: Router\n  ) {}\n\n  public carregarPilot(): void {\n    this.pilotId = +this.activatedRouter.snapshot.paramMap.get('id')!;\n    //this.pilotId = 1;\n    if (this.pilotId !== null && this.pilotId !== 0) {\n      this.spinner.show();\n\n      this.stateSave = 'putPilot';\n\n      this.peopleService\n        .getPilotById(this.pilotId)\n        .subscribe(\n          (pilot: People) => {\n            this.pilot = { ...pilot };\n            this.form.patchValue(this.pilot);\n          },\n          (error: any) => {\n            this.toastr.error('Erro ao tentar carregar Piloto.', 'Erro!');\n            console.error(error);\n          }\n        )\n        .add(() => this.spinner.hide());\n    }\n  }\n\n  ngOnInit(): void {\n    this.carregarPilot();\n    this.validation();\n  }\n\n  public validation(): void {\n    this.form = this.fb.group({\n      id: [{ value: '', disabled: true }],\n      name: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(40),\n        ],\n      ],\n      gender: ['', Validators.required],\n      age: ['', [Validators.required, Validators.max(100)]],\n      height: ['', [Validators.required, Validators.max(1000)]],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.form.invalid) {\n      return;\n    }\n  }\n\n  public resetForm(): void {\n    this.form.reset();\n  }\n\n  public cssValidator(campoForm: FormControl | AbstractControl): any {\n    return { 'is-invalid': campoForm.errors && campoForm.touched };\n  }\n\n  savePilot(template: any): void {\n    this.spinner.show();\n    if (this.form.valid) {\n      if(this.stateSave === 'postPilot') {\n      this.pilot = { ...this.form.value };\n      this.peopleService\n        .postPilot(this.pilot)\n        .subscribe(\n          (pilotRetorno: People) => {\n            // (pilotRetorno: People) => {\n            this.toastr.success(`Pilot: ${this.pilot.name} salvo com sucesso.`, 'Sucesso!');\n            this.router.navigate([`pilots/detail/${pilotRetorno.id}`]);\n            // this.router.navigate([`pilots/detail/${pilotRetorno.id}`]);\n            this.resetForm();\n          },\n          (error: any) => {\n            this.toastr.error(`Pilot: ${this.pilot.name} não foi salvo`, 'Erro!');\n            console.error(error);\n          }\n        ).add(() => this.spinner.hide());\n      }else {\n        this.pilot = { id: this.pilot.id, ...this.form.value };\n        this.peopleService\n          .putPilot(this.pilot)\n          .subscribe(\n            () =>\n              this.toastr.success(`Piloto: ${this.pilot.name} atualizado com sucesso.`, 'Sucesso!'),\n            (error: any) => {\n              this.toastr.error(`Pilot: ${this.pilot.name} não foi salvo`, 'Erro!');\n              console.error(error);\n            }\n          ).add(() => this.spinner.hide());\n      }\n      this.openModal(template);\n    }\n  }\n\n  openModal(template: TemplateRef<any>): void {\n    this.modalRef = this.modalService.show(template, { class: 'modal-sm' });\n  }\n\n  confirm(): void {\n    this.modalRef.hide();\n  }\n\n  decline(): void {\n    this.modalRef.hide();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent implements OnInit {\n\n  people: any\n  filmesFiltered: any;\n\n\n  constructor() { }\n\n  ngOnInit() {\n    this.filtroUrl();\n   }\n\n   filtroUrl(): string {\n    this.filmesFiltered = this.people;\n    return this.filmesFiltered;\n   }\n\n}\n","  <div class=\"card\" id=\"details\">\n    <img src=\"../assets/starwars.jpg\" class=\"card-img-top\" alt=\"...\">\n    <div class=\"card-body\">\n      <h4 class=\"card-title\">Name: {{people.name}}</h4>\n      <hr class=\"solid\">\n      <h4 class=\"card-title\">Age: {{people.age}}</h4>\n       <hr class=\"solid\">\n      <h4 class=\"card-title\">Height: {{people.height}}</h4>\n       <hr class=\"solid\">\n      <h4 class=\"card-title\">Gender: {{people.gender}}</h4>\n       <hr class=\"solid\">\n    </div>\n    <ul class=\"list-group list-group-flush\">\n      <h4 class=\"card-title\">Episodes:</h4>\n     <div > <!--*ngFor=\"let films of filmesFiltered\"-->\n       <li class=\"list-group-item\">Filme: </li>\n     </div>\n    </ul>\n  </div>\n","<div class=\"container\">\r\n\r\n  <div class=\"\">\r\n    <img src=\"../assets/StarWars3.png\" id=\"starwars\" alt=\"\">\r\n  </div>\r\n\r\n  <div class=\"title\">\r\n    <p>Pilots</p>\r\n  </div>\r\n\r\n  <div class=\"d-flex mb-3\">\r\n    <div class=\"flex-fill pr-3\">\r\n      <div class=\"input-group mb-2\">\r\n        <input type=\"search\" class=\"form-control\" placeholder=\"Filtrar por Nome ou Idade\" [(ngModel)]=\"filtroLista\" id=\"search\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-md-2 d-flex\">\r\n    <a class=\"d-flex btn btn-outline-primary\" (click)=\"openModalAddPilot(templateAdd)\">\r\n      <!--href=\"#\" -->\r\n      <i class=\"fa fa-plus-circle my-1\"></i>\r\n      <b class=\"ml-1 d-none d-sm-block\">Add Pilot</b>\r\n    </a>\r\n  </div>\r\n  <div *ngIf=\"peoples.length === 0\" class=\"d-flex justify-content-center\" style=\"color:white; font-size: 20px\">\r\n    There are no registered pilots...\r\n  </div>\r\n\r\n  <div *ngIf=\"peoples.length > 0\" class=\"row row-cols-1 row-cols-md-3 g-4\">\r\n    <div class=\"col\" *ngFor=\"let people of peoplesFiltered\" style=\"cursor: pointer;\">\r\n      <a (click)=\"openModal(people)\"><div class=\"card\">\r\n        <img src=\"../assets/unnamed.jpg\" class=\"card-img-top\" alt=\"...\">\r\n        <div class=\"card-footer d-flex justify-content-between\">\r\n          <small class=\"\">{{people.name}}\r\n          </small>\r\n          <div class=\"d-flex align-items-center\"><i class=\"fa fa-trash\" tooltip=\"Excluir\" (click)=\"openModalDelete($event, templateDelete, people.id)\"></i>\r\n            &nbsp;&nbsp;<i class=\"{{'fa fa-edit'}}\" tooltip=\"Editar\" (click)=\"openModalEdit($event, templateEdit, people.id)\"></i></div>\r\n        </div>\r\n      </div>\r\n    </a>\r\n    </div>\r\n  </div>\r\n\r\n  <button *ngIf=\"peoples.length > 0\" style=\"font-weight: 600;\" (click)=\"viewButton = !viewButton\" (click)=\"loading()\" class=\"btn mt-3\">{{nameButton}}</button>\r\n</div>\r\n\r\n<ng-template #templateAdd>\r\n  <div class=\"modal-body text-center\">\r\n    <p>Want to add a new Pilot?</p>\r\n    <button type=\"button\" class=\"btn btn-default\" routerLink=\"/pilots/detail\" (click)=\"confirmAddPilot()\">Yes</button>\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"declinePilot()\">No</button>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #templateDelete>\r\n  <div class=\"modal-body text-center\">\r\n    <p>Are you sure you want to delete the Code Pilot: {{this.people.id}}?</p>\r\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"confirmDeletePilot()\">Yes</button>\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"declineDeletePilot()\">No</button>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #templateEdit>\r\n  <div class=\"modal-body text-center\">\r\n    <p>You want to edit the code Pilot: {{this.peopleId}}?</p>\r\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"detalheEditPilot(this.peopleId)\" (click)=\"confirmEditPilot()\">Yes</button>\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"declineEditPilot()\">No</button>\r\n  </div>\r\n</ng-template>\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes} from '@angular/router';\nimport { PilotDetailComponent } from './pilot-detail/pilot-detail.component';\nimport { PilotsComponent } from './pilots.component';\n\nconst pilotsRoutes: Routes = [\n  { path: '', component: PilotsComponent },\n  { path: 'detail', component: PilotDetailComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(pilotsRoutes)],\n  exports: [RouterModule]\n})\n\nexport class PilotsRoutingModule {}\n","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { People } from 'src/app/models/People';\r\nimport { PeopleService } from 'src/app/services/people.service';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ModalComponent } from 'src/app/shared/modal/modal.component';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-pilots',\r\n  templateUrl: './pilots.component.html',\r\n  styleUrls: ['./pilots.component.scss']\r\n})\r\nexport class PilotsComponent implements OnInit {\r\n\r\n  modalRef!: BsModalRef;\r\n  public peopleId!: number;\r\n  public peopleName!: String;\r\n  public peopleage!: String;\r\n  public peopleFilms: People[] = [];\r\n  public peoples: People[] = [];\r\n  public peoplesFiltered: People[] = [];\r\n  people = {} as People;\r\n\r\n  public pagina = 1;\r\n\r\n  public viewButton = true;\r\n  public nameButton = '';\r\n\r\n  private filtroListado = '';\r\n\r\n  public get filtroLista(): string {\r\n    return this.filtroListado;\r\n  }\r\n\r\n  public set filtroLista(value: string) {\r\n    this.filtroListado = value;\r\n    this.peoplesFiltered = this.filtroLista\r\n      ? this.filterPilots(this.filtroLista)\r\n      : this.peoples;\r\n  }\r\n\r\n  constructor(\r\n     private peopleService: PeopleService,\r\n     private toastr: ToastrService,\r\n     private modalService: BsModalService,\r\n     private spinner: NgxSpinnerService,\r\n     private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n     this.spinner.show();\r\n     this.GetAllPilot();\r\n  }\r\n\r\n  public filterPilots(filtrarPor: string): People[] {\r\n    filtrarPor = filtrarPor.toLocaleLowerCase();\r\n    return this.peoples.filter(\r\n      (peoples: { name: string }) =>\r\n      peoples.name.toLocaleLowerCase().indexOf(filtrarPor) !== -1\r\n    );\r\n  }\r\n\r\n  public loading(): void {\r\n    if (this.viewButton) {\r\n      var viewMore = this.peoplesFiltered.slice(0,6);\r\n      this.peoplesFiltered = viewMore;\r\n      this.nameButton = 'View More';\r\n    }else {\r\n      if (this.peoples.length > 6) {\r\n      this.peoplesFiltered = this.peoples;\r\n      this.nameButton = 'View Less';\r\n    }else{\r\n      this.toastr.error(`Existem somente: ${this.peoplesFiltered.length} pilots registrados. `, `Erro!`);\r\n    }\r\n    }\r\n  }\r\n\r\n  public GetAllPilot(): void {\r\n    this.peopleService.getAllPilot().subscribe(\r\n      (peoples: any) => {\r\n        this.peoples = peoples;\r\n        this.peoplesFiltered = this.peoples;\r\n        this.loading();\r\n        this.toastr.success('Dados carregados', 'Sucesso!');\r\n      },\r\n      (error: any) => {\r\n        if (this.peoples.length === 0) {\r\n          this.toastr.error('Sem Pilotos cadastrados.', 'Erro!');\r\n        }\r\n        if (this.peoples.length != 0){\r\n         this.toastr.error('Erro ao carregar dados', 'Erro!');\r\n         console.error(error);\r\n      }\r\n      }\r\n    ).add(() => this.spinner.hide());\r\n  }\r\n\r\n  openModal(people: People): void {\r\n    let initialState = {\r\n      people\r\n    }\r\n    this.modalRef = this.modalService.show(ModalComponent, {class: 'modal-sm', initialState} );\r\n  }\r\n\r\n  openModalAddPilot(template: TemplateRef<any>): void {\r\n    this.modalRef = this.modalService.show(template, {class: 'modal-sm'});\r\n  }\r\n\r\n  openModalDelete(event: any, template: TemplateRef<any>, peopleId: number): void {\r\n    console.log(template);\r\n    event.stopPropagation();\r\n    this.peopleId = peopleId;\r\n    this.modalRef = this.modalService.show(template, {class: 'modal-sm'});\r\n  }\r\n\r\n  openModalEdit(event: any, template: TemplateRef<any>, peopleId: number): void {\r\n    console.log(template);\r\n    event.stopPropagation();\r\n    this.peopleId = peopleId;\r\n    this.modalRef = this.modalService.show(template, {class: 'modal-sm'});\r\n  }\r\n\r\n  confirmAddPilot(): void {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  declinePilot(): void {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  detalheEditPilot(id: number): void {\r\n    this.router.navigate([`/pilots/detail/${id}`]);\r\n  }\r\n\r\n  confirmEditPilot(): void {\r\n    this.modalRef.hide();\r\n    this.toastr.success('Você será redirecionado.', 'Aguarde!');\r\n  }\r\n\r\n  declineEditPilot(): void {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  declineDeletePilot(): void {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  confirmDeletePilot(): void {\r\n    this.modalRef.hide();\r\n    this.spinner.show();\r\n    this.peopleService.deletePilotById(this.peopleId).subscribe(\r\n      () => {\r\n        var namePilot = '';\r\n        this.peoples.forEach(x => {\r\n          namePilot = x.name;\r\n        });\r\n\r\n          this.toastr.success(`O Piloto ${namePilot} foi deletado com sucesso`, 'Sucesso!');\r\n          window.location.reload();\r\n      },\r\n      (error: any) => {\r\n        this.toastr.error(`Erro ao tentar deletar o Piloto ${this.peopleId}`, 'Erro!');\r\n        console.error(error);\r\n      }\r\n    ).add(() => this.spinner.hide());\r\n\r\n  }\r\n\r\n  mudarPagina(): void {\r\n    this.pagina++;\r\n    if (this.pagina > 9){\r\n        this.pagina = 1;\r\n    }\r\n   // console.log('Mais',this.pagina);\r\n  }\r\n\r\n  mudarPagina2(): void {\r\n    this.pagina--;\r\n    //console.log('Menos',this.pagina);\r\n  }\r\n\r\n  public GetAllPilotPage(): void {\r\n    this.peopleService.getPilotPage(this.pagina).subscribe(\r\n      (peoples: any) => {\r\n        this.peoples = peoples;\r\n        this.peoplesFiltered = this.peoples;\r\n\r\n        if (this.viewButton) {\r\n          var verMais = this.peoplesFiltered.slice(0,6);\r\n          this.peoplesFiltered = verMais;\r\n          this.nameButton = 'Ver mais';\r\n        }else {\r\n          this.peoplesFiltered =  this.peoples;\r\n          this.nameButton = 'Ver menos';\r\n        }\r\n        this.toastr.success('Dados carregados', 'Sucesso!');\r\n      },\r\n      (error: any) => {\r\n        this.toastr.error('Erro ao carregar dados', 'Erro!');\r\n        console.error(error);\r\n      }\r\n    ).add(() => this.spinner.hide());\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PilotsRoutingModule } from './pilots-routing.module';\nimport { PilotsComponent } from './pilots.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PeopleService } from 'src/app/services/people.service';\nimport { ModalComponent } from 'src/app/shared/modal/modal.component';\nimport { PilotDetailComponent } from './pilot-detail/pilot-detail.component';\n\n@NgModule({\n  declarations: [PilotsComponent, ModalComponent, PilotDetailComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PilotsRoutingModule,\n    TooltipModule.forRoot()\n  ],\n  providers: [PeopleService],\n})\nexport class PilotsModule { }\n"],"sourceRoot":"webpack:///"}