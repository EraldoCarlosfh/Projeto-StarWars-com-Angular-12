{"version":3,"sources":["./src/app/services/starships.service.ts","./src/app/components/starships/starship-detail/starship-detail.component.html","./src/app/components/starships/starship-detail/starship-detail.component.ts","./src/app/components/starships/starships.component.html","./src/app/components/starships/starships-routing.module.ts","./src/app/components/starships/starships.component.ts","./src/app/components/starships/starships.module.ts"],"names":["StarshipsService","http","endpoint","endpoint2","this","get","environment","pipe","take","page","id","starship","post","put","delete","StarshipDetailComponent","fb","activatedRouter","starshipService","modalService","toastr","spinner","router","form","controls","starshipId","snapshot","paramMap","show","getStarshipById","subscribe","pilot","patchValue","error","console","add","hide","carregarStarship","validation","group","name","size","passengers","reset","campoForm","errors","touched","template","valid","value","postStarship","success","resetForm","openModal","modalRef","class","onSubmit","saveStarship","starshipsRoutes","path","component","StarshipsComponent","starships","starshipsFiltered","pagina","viewButton","nameButton","filtroListado","filtroLista","filterStarships","GetAllStarship","filtrarPor","toLocaleLowerCase","filter","indexOf","getStarship","loading","length","viewMore","slice","getStarshipPage","event","log","stopPropagation","deleteStarshipById","nameStarship","forEach","x","window","location","reload","openModalAddStarship","StarshipsRoutingModule","StarshipsModule"],"mappings":"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","file":"413.f94d2a7d641553154127.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\nimport { Starship } from '../models/Starship';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\n\nexport class StarshipsService {\n\n  public endpoint = 'starships';\n  public endpoint2 = 'starship';\n\nconstructor(\n  private http: HttpClient\n) { }\n\npublic getStarship(): Observable<Starship[]> {\n  return this.http\n    .get<Starship[]>(environment.api + this.endpoint)\n    .pipe(take(1));\n}\n\npublic getStarshipPage(page: number): Observable<Starship[]> {\n  return this.http\n    .get<Starship[]>(`${environment.api + this.endpoint}/?page=${page}`)\n    .pipe(take(1));\n}\n\npublic getStarshipById(id: number,): Observable<Starship> {\n  return this.http\n    .get<Starship>(`${environment.api + this.endpoint}/${id}`)\n    .pipe(take(1));\n}\npublic postStarship(starship: Starship): Observable<Starship> {\n  return this.http\n    .post<Starship>(environment.api + 'save/' + this.endpoint2, starship)\n    .pipe(take(1));\n}\n\npublic putStarship(starship: Starship): Observable<Starship> {\n  return this.http\n    .put<Starship>(environment.api + 'update/' + this.endpoint2, starship)\n    .pipe(take(1));\n}\n\npublic deleteStarship(starship: Starship): Observable<any> {\n  return this.http\n    .delete(`${environment.api + 'delete/' + this.endpoint2, starship}`)\n    .pipe(take(1));\n}\n\npublic deleteStarshipById(id: number): Observable<any> {\n  return this.http\n    .delete(`${environment.api + 'delete/starship/'}${id}`)\n    .pipe(take(1));\n}\n\n}\n","<div class=\"container\">\n\n  <div class=\"\">\n    <img src=\"../assets/StarWars3.png\" id=\"starwars\" alt=\"\">\n  </div>\n\n  <div class=\"title\">\n    <p>Starships Registration</p>\n  </div>\n\n  <div class=\"card rounded shadow-sm\">\n    <img src=\"../assets/Ghost-Fathead.png\" class=\"card-img-top\" alt=\"...\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n\n      <div class=\"p-3\">\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-12\">\n            <label>Name:</label>\n            <input type=\"text\" class=\"form-control\" [ngClass]=\"cssValidator(f.name)\" formControlName=\"name\"\n              placeholder=\"Enter your Name\" [(ngModel)]=\"starship.name\">\n            <div *ngIf=\"f.name.errors?.required\" class=\"invalid-feedback\">\n              Name is mandatory!\n            </div>\n            <div *ngIf=\"f.name.errors?.minlength\" class=\"invalid-feedback\">\n              Name must be at least 4 characters long!\n            </div>\n            <div *ngIf=\"f.name.errors?.maxlength\" class=\"invalid-feedback\">\n              Name must have a maximum of 50 characters!\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-row d-flex justify-content-between mt-3 mb-4\">\n\n          <div class=\"form-group col-md-3\">\n            <label>Size:</label>\n            <input type=\"number\" class=\"form-control\" [ngClass]=\"cssValidator(f.size)\" formControlName=\"size\"\n              placeholder=\"Size\" [(ngModel)]=\"starship.size\">\n            <div *ngIf=\"f.size.errors?.required && f.size.touched\" class=\"invalid-feedback\">\n              Size is mandatory!\n            </div>\n            <div *ngIf=\"f.size.errors?.max && f.size.touched\" class=\"invalid-feedback\">\n              Maximum size is 400!\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label>Passengers:</label>\n            <input type=\"number\" class=\"form-control\" [ngClass]=\"cssValidator(f.passengers)\" formControlName=\"passengers\"\n              placeholder=\"Passengers\" [(ngModel)]=\"starship.passengers\">\n            <div *ngIf=\"f.passengers.errors?.required && f.passengers.touched\" class=\"invalid-feedback\">\n              Passenger is mandatory!\n            </div>\n            <div *ngIf=\"f.passengers.errors?.max && f.passengers.touched\" class=\"invalid-feedback\">\n              Maximum quantity is 2.000!\n            </div>\n          </div>\n\n        </div>\n\n        <div class=\"card-footer\">\n          <div class=\"d-flex justify-content-between\">\n            <button class=\"btn btn-outline-secondary mr-auto border\" (click)=\"resetForm()\">\n              Cancel Change\n            </button>\n            <button class=\"btn btn-primary\" [disabled]=\"!form.valid\" (click)=\"saveStarship(template)\">\n              Save Nave\n            </button>\n          </div>\n        </div>\n\n      </div>\n    </form>\n  </div>\n</div>\n\n<ng-template #template>\n  <div class=\"modal-body text-center\">\n    <p>Want to add a new starship?</p>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"confirm()\">Yes</button>\n    <button type=\"button\" class=\"btn btn-primary\" routerLink=\"/starships\" (click)=\"decline()\">No</button>\n  </div>\n</ng-template>\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { Starship } from 'src/app/models/Starship';\nimport { StarshipsService } from 'src/app/services/starships.service';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-starship-detail',\n  templateUrl: './starship-detail.component.html',\n  styleUrls: ['./starship-detail.component.scss']\n})\nexport class StarshipDetailComponent implements OnInit {\n  modalRef!: BsModalRef;\n  starshipId!: number;\n  starship = {} as Starship;\n  form!: FormGroup;\n\n   get f(): any {\n    return this.form.controls;\n  }\n\n\n  constructor(\n    private fb: FormBuilder,\n    private activatedRouter: ActivatedRoute,\n    private starshipService: StarshipsService,\n    private modalService: BsModalService,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService,\n    private router: Router\n  ) { }\n\n  public carregarStarship(): void {\n    this.starshipId = +this.activatedRouter.snapshot.paramMap.get('id')!;\n\n    if (this.starshipId !== null && this.starshipId !== 0) {\n      this.spinner.show();\n\n      //this.estadoSalvar = 'putEvento';\n\n      this.starshipService.getStarshipById(this.starshipId).subscribe(\n          (pilot: Starship) => {\n            this.starship = { ...pilot };\n            this.form.patchValue(this.starship);\n          },\n          (error: any) => {\n            this.toastr.error('Erro ao tentar carregar Starship.', 'Erro!');\n            console.error(error);\n          }\n        ).add(() => this.spinner.hide());\n    }\n  }\n\n\n  ngOnInit(): void {\n    this.carregarStarship();\n    this.validation();\n  }\n\n\n  public validation(): void {\n    this.form = this.fb.group({\n      name: ['',\n          [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(40),\n        ],\n      ],\n      size: ['', [Validators.required, Validators.max(400)]],\n      passengers: ['', [Validators.required, Validators.max(2000)]]\n    });\n  }\n\n  onSubmit(): void {\n    if (this.form.invalid) {\n      return;\n    }\n  }\n\n  public resetForm(): void {\n    this.form.reset();\n  }\n\n  public cssValidator(campoForm: FormControl | AbstractControl): any {\n    return { 'is-invalid': campoForm.errors && campoForm.touched };\n  }\n\n  saveStarship(template: any): void {\n    this.spinner.show();\n    if (this.form.valid) {\n\n        this.starship = { ...this.form.value };\n        this.starshipService.postStarship(this.starship).subscribe(\n            () => {\n              // (pilotRetorno: People) => {\n              this.toastr.success(`Starship: ${this.starship.name} salva com sucesso.`, 'Sucesso!');\n              // this.router.navigate([`pilots/detail/${pilotRetorno.id}`]);\n              this.resetForm();\n            },\n            (error: any) => {\n              this.toastr.error(`Starship: ${this.starship.name} não foi salva`, 'Erro!');\n              console.error(error);\n            }\n          ).add(() => this.spinner.hide());\n          this.openModal(template);\n\n    }\n  }\n\n  openModal(template: TemplateRef<any>): void {\n    this.modalRef = this.modalService.show(template, {class: 'modal-sm'});\n  }\n\n  confirm(): void {\n    this.modalRef.hide();\n  }\n\n  decline(): void {\n    this.modalRef.hide();\n  }\n\n}\n","<div class=\"container\">\r\n\r\n  <div class=\"\">\r\n    <img src=\"../assets/StarWars3.png\" id=\"starwars\" alt=\"\">\r\n  </div>\r\n\r\n  <div class=\"title\">\r\n    <p>Starships</p>\r\n  </div>\r\n\r\n  <div class=\"d-flex mb-3\">\r\n    <div class=\"flex-fill pr-3\">\r\n      <div class=\"input-group mb-2\">\r\n        <input type=\"search\" class=\"form-control\" placeholder=\"Filtrar por Nome\" [(ngModel)]=\"filtroLista\" id=\"search\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-md-2 d-flex\">\r\n    <a class=\"d-flex btn btn-outline-primary\" (click)=\"openModalAddStarship(templateAdd)\">\r\n      <!--href=\"#\" -->\r\n      <i class=\"fa fa-plus-circle my-1\"></i>\r\n      <b class=\"ml-1 d-none d-sm-block\">Add Starship</b>\r\n    </a>\r\n  </div>\r\n  <div *ngIf=\"starships.length === 0\" class=\"d-flex justify-content-center\" style=\"color:white; font-size: 20px\">\r\n    There are no registered Starships...\r\n  </div>\r\n\r\n  <div *ngIf=\"starships.length > 0\" class=\"row row-cols-1 row-cols-md-3 g-4\">\r\n    <div class=\"col\" *ngFor=\"let star of starshipsFiltered\" style=\"cursor: pointer;\">\r\n      <div class=\"card\">\r\n        <img src=\"../assets/Ghost-Fathead.png\" class=\"card-img-top\" alt=\"...\">\r\n        <div class=\"card-footer d-flex justify-content-between\">\r\n          <small class=\"\">{{star.name}}\r\n          </small>\r\n          <div class=\"d-flex align-items-center\"><i class=\"fa fa-trash\" tooltip=\"Excluir\" (click)=\"openModalDelete($event, templateDelete, star.id)\"></i>\r\n            &nbsp;&nbsp;<i class=\"{{'fa fa-edit'}}\" tooltip=\"Editar\"></i></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <button *ngIf=\"starships.length > 0\" style=\"font-weight: 600;\" (click)=\"viewButton = !viewButton\" (click)=\"loading()\" class=\"btn mt-3\">{{nameButton}}</button>\r\n  <!-- <div class=\"d-flex justify-content-between\">\r\n    <button *ngIf=\"pagina >= 0\" (click)=\"mudarPagina()\" (click)=\"GetAllStarshipPage()\" style=\"font-weight: 600;\"\r\n      class=\"btn mt-3\">Próxima</button><br>\r\n    <button *ngIf=\"pagina > 0\" (click)=\"mudarPagina2()\" (click)=\"GetAllStarshipPage()\" style=\"font-weight: 600;\"\r\n      class=\"btn mt-3\">Anterior</button>\r\n  </div> -->\r\n</div>\r\n\r\n<ng-template #templateAdd>\r\n  <div class=\"modal-body text-center\">\r\n    <p>Want to add a new starship?</p>\r\n    <button type=\"button\" class=\"btn btn-default\" routerLink=\"/starships/detail\" (click)=\"confirmAddStarship()\">Yes</button>\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"declineStarship()\">No</button>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #templateDelete>\r\n  <div class=\"modal-body text-center\">\r\n    <p>Are you sure you want to delete the Code Starship: {{this.starshipId}}?</p>\r\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"confirmDeleteStarship()\">Yes</button>\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"declineDeleteStarship()\">No</button>\r\n  </div>\r\n</ng-template>\r\n\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes} from '@angular/router';\nimport { StarshipDetailComponent } from './starship-detail/starship-detail.component';\nimport { StarshipsComponent } from './starships.component';\n\nconst starshipsRoutes: Routes = [\n  { path: '', component: StarshipsComponent },\n  { path: 'detail', component: StarshipDetailComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(starshipsRoutes)],\n  exports: [RouterModule]\n})\n\nexport class StarshipsRoutingModule {}\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ToastrService } from 'ngx-toastr';\nimport { StarshipsService } from 'src/app/services/starships.service';\nimport { Starship } from 'src/app/models/Starship';\n\n@Component({\n  selector: 'app-starships',\n  templateUrl: './starships.component.html',\n  styleUrls: ['./starships.component.scss']\n})\nexport class StarshipsComponent implements OnInit {\n\n  modalRef!: BsModalRef;\n  public starshipId!: number;\n  public starships: Starship[] = [];\n  public starshipsFiltered: Starship[] = [];\n  starship = {} as Starship;\n\n  public pagina = 1;\n\n  public viewButton = true;\n  public nameButton = '';\n\n  private filtroListado = '';\n\n  public get filtroLista(): string {\n    return this.filtroListado;\n  }\n\n  public set filtroLista(value: string) {\n    this.filtroListado = value;\n    this.starshipsFiltered = this.filtroLista\n      ? this.filterStarships(this.filtroLista)\n      : this.starships;\n  }\n\n  constructor(\n    private spinner: NgxSpinnerService,\n    private starshipService: StarshipsService,\n    private modalService: BsModalService,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.spinner.show();\n    this.GetAllStarship();\n    //console.log('Inicial',this.pagina);\n  }\n\n  public filterStarships(filtrarPor: string): Starship[] {\n    filtrarPor = filtrarPor.toLocaleLowerCase();\n    return this.starships.filter(\n      (starships: { name: string}) =>\n      starships.name.toLocaleLowerCase().indexOf(filtrarPor) !== -1\n    );\n  }\n\n  public GetAllStarship(): void {\n    this.starshipService.getStarship().subscribe(\n      (starships: any) => {\n        this.starships = starships;\n        this.starshipsFiltered = this.starships;\n        this.loading();\n\n        this.toastr.success('Dados carregados', 'Sucesso!');\n      },\n      (error: any) => {\n\n        if (this.starships.length === 0) {\n          this.toastr.error('Sem Starships cadastradas.', 'Erro!');\n        }\n        if (this.starships.length != 0){\n          this.toastr.error('Erro ao carregar dados', 'Erro!');\n          console.error(error);\n      }\n      }\n    ).add(() => this.spinner.hide());\n  }\n\n  mudarPagina(): void {\n    this.pagina++;\n    if (this.pagina > 4){\n        this.pagina = 1;\n    }\n   // console.log('Mais',this.pagina);\n  }\n\n  mudarPagina2(): void {\n    this.pagina--;\n    //console.log('Menos',this.pagina);\n  }\n\n  public loading(): void {\n    if (this.viewButton) {\n      var viewMore = this.starshipsFiltered.slice(0,6);\n      this.starshipsFiltered = viewMore;\n      this.nameButton = 'View More';\n    }else {\n      if (this.starships.length > 6) {\n      this.starshipsFiltered = this.starships;\n      this.nameButton = 'View Less';\n    }else{\n      this.toastr.error(`Existem somente: ${this.starshipsFiltered.length} starships registradas. `, `Erro!`);\n    }\n    }\n  }\n\n  public GetAllStarshipPage(): void {\n    this.starshipService.getStarshipPage(this.pagina).subscribe(\n      (starships: any) => {\n        this.starships = starships;\n        this.starshipsFiltered = this.starships;\n        this.toastr.success('Dados carregados', 'Sucesso!');\n      },\n      (error: any) => {\n        this.toastr.error('Erro ao carregar dados', 'Erro!');\n        console.error(error);\n      }\n    ).add(() => this.spinner.hide());\n  }\n\n  openModalAddStarship(template: TemplateRef<any>): void {\n    this.modalRef = this.modalService.show(template, {class: 'modal-sm'});\n  }\n\n  openModalDelete(event: any, template: TemplateRef<any>, starshipId: number): void {\n    console.log(template);\n    event.stopPropagation();\n    this.starshipId = starshipId;\n    this.modalRef = this.modalService.show(template, {class: 'modal-sm'});\n  }\n\n  confirmAddStarship(): void {\n    this.modalRef.hide();\n  }\n\n  declineStarship(): void {\n    this.modalRef.hide();\n  }\n\n  declineDeleteStarship(): void {\n    this.modalRef.hide();\n  }\n\n  confirmDeleteStarship(): void {\n    this.modalRef.hide();\n    this.spinner.show();\n    this.starshipService.deleteStarshipById(this.starshipId).subscribe(\n      () => {\n        var nameStarship = '';\n        this.starships.forEach(x => {\n          nameStarship = x.name;\n        });\n\n          this.toastr.success(`O Starship ${nameStarship} foi deletada com sucesso`, 'Sucesso!');\n          window.location.reload();\n      },\n      (error: any) => {\n        this.toastr.error(`Erro ao tentar deletar a Starship ${this.starshipId}`, 'Erro!');\n        console.error(error);\n      }\n    ).add(() => this.spinner.hide());\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StarshipsRoutingModule } from './starships-routing.module';\nimport { StarshipsComponent } from './starships.component';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { StarshipsService } from 'src/app/services/starships.service';\nimport { StarshipDetailComponent } from './starship-detail/starship-detail.component';\n\n@NgModule({\n  declarations: [StarshipsComponent, StarshipDetailComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    StarshipsRoutingModule,\n    TooltipModule.forRoot()\n  ],\n  providers: [StarshipsService],\n})\nexport class StarshipsModule { }\n"],"sourceRoot":"webpack:///"}